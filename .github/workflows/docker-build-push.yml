name: Build & Push Docker Image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]

permissions:
  contents: read
  packages: write   # needed for GHCR with GITHUB_TOKEN

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

  DOCKERFILE: Dockerfile
  CONTEXT: .
  # Set default platforms; change to linux/amd64 only if qemu is slow/not needed
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---- Login to registry ----
      # GHCR login (uses GITHUB_TOKEN)
      - name: Login to GHCR
        if: env.REGISTRY == 'ghcr.io'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---- Derive tags and labels ----
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,enable=${{ github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      # ---- Cache layers (GitHub cache) ----
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # ---- Build (and push only on push/tag) ----
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Workaround to move cache (keeps cache size bounded between runs)
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # ---- Optional: output digest for traceability ----
      - name: Image digest
        if: github.event_name != 'pull_request'
        run: echo "DIGEST=${{ steps.meta.outputs.tags }} -> ${{ steps.buildx.outputs.digest || 'see action logs' }}"
