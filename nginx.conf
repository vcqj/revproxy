# Re-resolve Docker DNS and support WS upgrades
resolver 127.0.0.11 ipv6=off valid=10s;

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 8080;
  server_name _;

  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_buffering off;
  proxy_read_timeout 300s;
  proxy_send_timeout 300s;
  client_max_body_size 50m;

  # Upstreams as variables (forces runtime DNS resolution)
  set $web_upstream        http://web:80;
  set $api_upstream        http://api:4000;
  set $os_upstream         http://opensearch:9200;
  set $dashboards_upstream http://dashboards:5601;

  # --- Frontend at root (served by web container) ---
  location / {
    proxy_pass $web_upstream;
    proxy_redirect off;
  }

  # --- GraphQL API (WS upgrades) ---
  location = /api/graphql {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_pass $api_upstream/graphql;
    proxy_redirect off;
  }

  # --- Other API routes ---
  location /api/ {
    proxy_pass $api_upstream/;
    proxy_redirect off;
  }

  # --- OpenSearch ---
  location /opensearch/ {
    proxy_pass $os_upstream/;
    proxy_redirect off;
  }

  # --- Dashboards under /dashboards ---
  # Ensure opensearch_dashboards.yml has:
  #   server.basePath: "/dashboards"
  #   server.rewriteBasePath: true
  location = /dashboards { return 301 /dashboards/; }

  location /dashboards/ {
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_pass $dashboards_upstream;
    proxy_redirect off;
  }

  # Health
  location = /healthz { return 200 "ok\n"; }
}

